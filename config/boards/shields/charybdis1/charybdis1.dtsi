#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <11>;
        rows = <6>;

        map = <    
//                         LEFT                                               RIGHT
// ┌──PINKY──┬──RING────┬─MIDDLE─┬──INDEX──┬──INNER──┐  ┌──INNER──┬──INDEX──┬─MIDDLE─┬─RING────┬──PINKY──┐
     RC(0,0)   RC(0,1)   RC(0,2)   RC(0,3)   RC(0,4)     RC(0,5)   RC(0,6)   RC(0,7)   RC(0,8)   RC(0,9)
     RC(1,0)   RC(1,1)   RC(1,2)   RC(1,3)   RC(1,4)     RC(1,5)   RC(1,6)   RC(1,7)   RC(1,8)   RC(1,9)
     RC(2,0)   RC(2,1)   RC(2,2)   RC(2,3)   RC(2,4)     RC(2,5)   RC(2,6)   RC(2,7)   RC(2,8)   RC(2,9)
     RC(3,0)   RC(3,1)   RC(3,2)   RC(3,3)   RC(3,4)     RC(3,5)   RC(3,6)   RC(3,7)   RC(3,8)   RC(3,9)
// └─────────┴──────────┴────────┴─────────┴─────────┘  └─────────┴─────────┴────────┴─────────┴─────────┘
//                        THUMB                                               THUMB
// ┌───TOP───┬──MIDDLE──┬─BOTTOM─┬─ENCODER─┐                      ┌─ENCODER─┬─BOTTOM─┬─MIDDLE──┬────TOP──┐
     RC(4,0)   RC(4,1)    RC(4,2)  RC(4,3)                         RC(4,6)   RC(4,7)   RC(4,8)   RC(4,9)
// └─────────┴──────────┴────────┴─────────┘                      └─────────┴────────┴─────────┴─────────┘

// 5 WAY SWITCH *this is treated as a new row with 5 columns (each switch direction is a column, the entire switch is the row)
//     UP       DOWN      LEFT      RIGHT     PUSH
// ┌─────────┬─────────┬─────────┬─────────┬─────────┐
     RC(5,0)   RC(5,1)   RC(5,2)   RC(5,3)   RC(5,4)
// └─────────┴─────────┴─────────┴─────────┴─────────┘
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";

        diode-direction = "col2row";
    };

    left_top_encoder: left_top_encoder {
        compatible = "alps,ec11";
        label = "LEFT_TOP_ENCODER";
        a-gpios = <&pro_micro 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 16 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        resolution = <4>;
        status = "disabled";
    };

    left_bottom_encoder: left_bottom_encoder {
        compatible = "alps,ec11";
        label = "LEFT_BOTTOM_ENCODER";
        a-gpios = <&pro_micro 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        resolution = <4>;
        status = "disabled";
    };

    right_top_encoder: right_top_encoder {
        compatible = "alps,ec11";
        label = "RIGHT_TOP_ENCODER";
        a-gpios = <&pro_micro 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 16 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        resolution = <4>;
        status = "disabled";
    };

    right_bottom_encoder: right_bottom_encoder {
        compatible = "alps,ec11";
        label = "RIGHT_BOTTOM_ENCODER";
        a-gpios = <&pro_micro 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        resolution = <4>;
        status = "disabled";
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <
            &left_top_encoder
            &left_bottom_encoder
            &right_top_encoder
            &right_bottom_encoder
        >;
    };

    trackballs {
		compatible = "zmk,keymap-trackballs";
		trackballs = <&trackball>;
	};

};

&spi0 {
    compatible = "nordic,nrf-spim";
    status = "disabled";

    trackball: trackball@0 {
        compatible = "pixart,pmw3610";
        status = "disabled";
        reg = <0>;
        label = "TRACKBALL";
        spi-max-frequency = <2000000>;
        // duplex = <2048>; // required by 3-wire spi
    };
};